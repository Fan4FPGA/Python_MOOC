#-*- coding:utf-8 -*-
'''-------------------------------------------------------------------------------
二维数据的格式化和处理
-1 二维数据表示
-2 CSV 数据存储格式
-3 二维数据存储
-4 二维数据的处理
-------------------------------------------------------------------------------------'''

'''-----------------------------------------------------------------------------
二维数据表示
使用列表
[ [3.13,3.11,3.112],
  [3.13,3.11,3.112] ]
使用两层for循环遍历每个元素
外层列表每个元素对应一行，也可以对应一列

CSV(Comma-Separated Values)存储格式
-1 国际通用的一二维数据存储格式，一般用.csv扩展名
-2 每行一个一维数据采用逗号分隔无空行
-3 Excel软件可以读入输出，一般编辑软件都可以生成
-4 如过某个元素缺失逗号保留
e.g.
城市，环比，同比，定基
北京，101.1，120.5,111,3
四川，101.1，120.5,111,3
上海，101.1，120.5,111,3


二维数据存储
-1 按行按列存都可以，由程序具体决定
-2 一般index习惯：ls[row][column],先行后列
-3 一般习惯，外层列表每个元素是一行，按行存



二维数据的读入处理
从CSV 格式文件中读入数据
fo = open("fname")
ls = []
for line in fo:
    line = line.replace("\n","")
    ls.append(line.split(","))
fo.close()

将数据写入CSV格式文件中
ls = [[11,12,13],[21,22,23],[31,32,33],[41,42,43]]
fo = open("fname",'w')
for item in ls:
    f.write(','.join(item)+'\n')
fo.close()

二维数据的逐一处理

ls = [[11,12,13],[21,22,23],[31,32,33],[41,42,43]]
for row in ls:
    for col in row:
        print(ls[row][col])
        
总结：二维数据的处理for循环+.split()+.join()
------------------------------------------------------------------------------------'''

#将数据写入CSV格式文件中
ls = [['11','12','13'],['21','22','23'],['31','32','33'],['41','42','43']]
fo = open("fname.csv",'w')
for item in ls:
    fo.write(','.join(item)+'\n')
fo.close()
#从CSV 格式文件中读入数据
fo_r = open("fname.csv")
ls1 = []
for line in fo_r:
    line = line.replace("\n","")
    ls1.append(line.split(","))
fo_r.close()
#二维数据的逐一处理
for row in range(len(ls1)):
    for col in range(len(ls1[row])):
        print(ls1[row][col])